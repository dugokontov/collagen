{
  "name": "bones-auth",
  "description": "User model with password based authentication for Bones.",
  "version": "2.1.0",
  "author": {
    "name": "Development Seed",
    "email": "info@developmentseed.org",
    "url": "http://developmentseed.org/"
  },
  "scripts": {
    "test": "./node_modules/.bin/mocha -R spec --ignore-leaks"
  },
  "dependencies": {
    "email": "0.2.3"
  },
  "devDependencies": {
    "mocha": "1.3.x"
  },
  "readme": "Bones Auth\n----------\nProvides base `Auth` and `AuthList` (model, collection) base\nclasses and `authenticate` Connect middleware for implementing basic\nsession-based user login with Backbone.js, Bones and Express.\n\nA basic `User` model that extends `Auth` is provided as an example and\nstarting point. Integration with `bones-admin` through administrative views\nis also available.\n\n### Tested with\n\n- developmentseed bones 0.0.2\n- documentcloud backbone 0.3.3\n- visionmedia express 1.0.7\n\n### Running tests\n\n- Use [kkaefer's expresso branch](https://github.com/kkaefer/expresso/tree/stop_listening_servers)\n- Run `npm test`\n\n### Components\n\n- `bones-auth.js`: client side javascript. Contains the mvc classes for any\n  client-side `backbone.js` code to reference.\n- `bones-auth`: common js module for use with node.js. Includes server-side\n  specific overrides to mvc classes as well as other server-side code.\n\n### Usage\n\n#### `Auth`\n\nAbstract model class. Extend it with your own model to create a model which can\nbe \"authenticated\". See the `User` model for an example.\n\n#### `AuthList`\n\nAbstract collection class. Extend it for use with collections that contain\nmodel classes inheriting from `Auth`.\n\n#### `authenticate` middleware\n\nRequire `authenticate` connect middleware and add it as a middleware for\nauthenticating models. Automatically adds and manages the Connect session\nmiddleware -- session cookies will only be sent and active when authenticating\nand/or an authenticated session already exists. Allows for sane proxy caching.\n\n    var express = require('express'),\n        server = express.createServer(),\n        secret = 'MySecretKey';\n\n    // Express middleware.\n    server.use(express.bodyDecoder());\n    server.use(express.cookieDecoder());\n\n    // Pass secret key to Bones for CSRF protection.\n    require('bones').Bones(server, { secret: secret });\n\n    // Require bones-auth to use authenticate middleware.\n    // Handles authentication requests to `/api/Authenticate`.\n    var authenticate = require('bones-auth').authenticate;\n    server.use(authenticate({ secret: secret });\n\n#### Authors\n\n- [Will White](http://github.com/willwhite)\n- [Young Hahn](http://github.com/yhahn)\n\n",
  "readmeFilename": "README.md",
  "_id": "bones-auth@2.1.0",
  "dist": {
    "shasum": "d776d613015fefbf031f2641356cc594755c545b"
  },
  "_resolved": "git://github.com/developmentseed/bones-auth.git#1a88798384f956e1108fb45b633d76c8be8cc7f4",
  "_from": "bones-auth@git://github.com/developmentseed/bones-auth.git"
}
